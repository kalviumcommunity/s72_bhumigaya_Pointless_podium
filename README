# Pointless Podium

A quirky platform that celebrates hilariously useless skills! "Pointless Podium" allows users to submit, vote on, and comment on bizarre talents, making it a fun way to showcase full-stack MERN development skills.

---

## **Features**

### Core Features
- **User Authentication**: Secure sign-up, login, and personalized profiles.
- **Skill Submission**: Add a title, description, and optional media for your useless skill.
- **Voting System**: Upvote or downvote skills to rank them on dynamic leaderboards.
- **Leaderboards**:
  - **Global Leaderboard**: Displays top-ranked skills from all users.
  - **Personalized Leaderboard**: Showcases skills specific to the logged-in user.
- **Comments and Reactions**: Engage with skills through comments and fun reactions.
- **Filters and Categories**: Browse skills by type (e.g., "Physical Feats," "Random Talents").

### Advanced Features (Optional)
- **Media Uploads**: Users can attach images or videos to their submissions.
- **Real-Time Updates**: Live leaderboard updates using WebSockets or polling.
- **Admin Panel**: Monitor and manage skill submissions and categories.

---

## **Tech Stack**

### Front-End
- **React**: For building a dynamic, component-based UI.
- **Vite**: Fast build tool for React.
- **Tailwind CSS**: For responsive and modern styling.
- **React Router**: For navigation between pages.
- **Axios**: For API requests.

### Back-End
- **Node.js with Express.js**: RESTful API for handling requests and responses.
- **MongoDB with Mongoose**: Database for storing users, skills, votes, and comments.
- **JWT**: Secure authentication mechanism.

## **Setup Instructions**

1. **Clone the Repository**:
   ```bash
   git clone https://github.com/your-username/pointless-podium.git
   cd pointless-podium
   ```

2. **Install Dependencies**:
   ```bash
   # Front-end
   cd client
   npm install

   # Back-end
   cd ../server
   npm install
   ```

3. **Set Up Environment Variables**:
   - Create `.env` files in both `client` and `server` folders.
   - Add necessary keys (e.g., MongoDB URI, JWT secret, Cloudinary API keys).

4. **Run the Application**:
   ```bash
   # Front-end
   cd client
   npm run dev

   # Back-end
   cd ../server
   npm start
   ```

5. **Access the Application**:
   Open `http://localhost:3000` in your browser.

